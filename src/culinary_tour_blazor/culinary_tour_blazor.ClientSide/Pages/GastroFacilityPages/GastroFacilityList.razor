@page "/gastro_facility"

<h3>GastroFacility</h3>

<a class="btn btn-primary my-2" role="button" href="/gastro_facility/create">Додати заклад</a>

@if (GastroFacility.Count == 0)
{
    <div class="d-flex justify-content-center">
        <div class="spinner-border text-primary" style="width: 3rem; height: 3rem;" role="status">
            <span class="visually-hidden">Loading...</span>
        </div>
    </div>
}
else
{
    <br />
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4 container-xxl">
        @foreach (var gf in GastroFacility)
        {
            <div class="col">
                <div class="card zoom-on-hover">
                    <a href="#" class="d-flex justify-content-center">
                        @if (gf.Photo != null)
                        {
                            <img src="data:image/png;base64,@Convert.ToBase64String(gf.Photo)" class="card-img-top" alt="Зображення гастрозакладу" style="width: auto; height: auto; max-width: 100%; max-height: 50vh;">
                        }
                        else
                        {
                            <img src="default_image.jpg" class="card-img-top" alt="Зображення гастрозакладу" style="width: auto; height: auto; max-width: 100%; max-height: 50vh;">
                        }
                    </a>
                    <div class="card-body d-flex flex-column justify-content-between">
                        <div>
                            <h5 class="card-title">@gf.Name</h5>
                            <p class="card-text">Тип: @gf.Type?.Name</p>
                            <p class="card-text">
                                Кухні:
                                @if (gf.Cuisines != null && gf.Cuisines.Any())
                                {
                                    @foreach (var cuisine in gf.Cuisines)
                                    {
                                        <span class="d-inline-flex align-items-center font-weight-medium rounded-2 text-sm px-1 border border-dark-subtle bg-body-secondary">@cuisine.Name </span>
                                    }
                                }
                                else
                                {
                                    <span>Не вказано</span>
                                }
                            </p>
                            <div class="ratingDiv">
                                <span class="my-rating" data-rating="@gf.RatingAvg?.ToString("F1").Replace(",", ".")"></span>
                            </div>
                        </div>
                        @if (true)
                        {
                            <div class="mr-2 d-flex justify-content-around my-3 buttons">
                                <div>
                                    <button class="btn btn-danger" @onclick="() => ConfirmDelete(gf.Id)">Видалення</button>
                                </div>
                                <div>
                                    <a href="@($"gastro_facility/edit/{gf.Id}")" class="btn btn-primary">Редагування</a>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<GastroFacility> GastroFacility = new List<GastroFacility>();

    protected override async Task OnInitializedAsync()
    {
        GastroFacility = await GastroFacilityService.GetAllAsync();
    }

    private async Task Delete(Guid id)
    {
        await GastroFacilityService.DeleteAsync(id);
        GastroFacility = await GastroFacilityService.GetAllAsync();
    }

    private async Task ConfirmDelete(Guid id)
    {
        bool confirmed = await JSRuntime.InvokeAsync<bool>("confirm", new object[] { "Are you sure you want to delete this facility?" });
        if (confirmed)
        {
            await Delete(id);
        }
    }
}
