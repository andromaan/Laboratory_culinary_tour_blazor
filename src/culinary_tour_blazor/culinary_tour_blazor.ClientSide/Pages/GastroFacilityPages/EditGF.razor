@page "/gastro_facility/edit/{Id:guid}"


<h3>Редагування Гастрозакладу</h3>

@if (facility == null)
{
    <div>Завантаження...</div>
}
else
{
    <EditForm Model="facility" OnValidSubmit="HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="my-3">
            <label>Назва</label>
            <InputText @bind-Value="facility.Name" class="form-control" />
        </div>

        <div class="my-3">
            <label>Опис</label>
            <InputTextArea @bind-Value="facility.Description" class="form-control" />
        </div>

        <div class="my-3">
            <label>Тип</label>
            <InputSelect @bind-Value="facility.TypeId" class="form-control">
                <option value="">- Оберіть тип -</option>
                @foreach (var type in Types)
                {
                    <option value="@type.Id">@type.Name</option>
                }
            </InputSelect>
        </div>

        <div class="my-3">
            <div class="col-2"><label>Кухні:</label></div>
            <div class="col-3">
                <select @onchange="OnCuisineSelectionChanged" class="form-control" multiple>
                    @foreach (var cuisine in Cuisines)
                    {
                        <option value="@cuisine.Id" selected="@selectedCuisines.Contains(cuisine.Id)">@cuisine.Name</option>
                    }
                </select>
            </div>
        </div>

        <div class="my-3">
            <div class="col-2"><label>Рейтинг:</label></div>
            <div class="col-3"><input @bind="facility.RatingAvg" class="form-control" type="number" step=".5" min="1" max="5" /></div>
        </div>

        <div class="my-3">
            <label>Фото</label>
            <InputFile OnChange="OnImageChange" accept="image/*" class="form-control" />
        </div>

        <div class="my-3">
            @if (imagePreviewUrl != null)
            {
                <img src="@imagePreviewUrl" class="img-fluid" style="max-height: 200px;" />
            }
        </div>

        

        <div class="my-3">
            <button type="submit" class="btn btn-primary">Зберегти</button>
        </div>
    </EditForm>
}

@code {
    [Parameter]
    public Guid Id { get; set; }

    private GastroFacility facility = new GastroFacility();
    private List<FacilityType> Types = new List<FacilityType>();
    private List<Cuisine> Cuisines = new List<Cuisine>();
    private List<int> selectedCuisines = new List<int>();
    private string imagePreviewUrl;

    protected override async Task OnParametersSetAsync()
    {
        facility = await GastroFacilityService.GetById(Id) ?? new GastroFacility();
        Types = await FacilityTypesService.GetAllAsync();
        Cuisines = await CuisinesService.GetAllAsync();
        selectedCuisines = facility.Cuisines?.Select(c => c.Id).ToList() ?? new List<int>();

        if (facility.Photo != null)
        {
            var base64 = Convert.ToBase64String(facility.Photo);
            imagePreviewUrl = $"data:image/png;base64,{base64}";
        }
    }

    private async Task HandleSubmit()
    {
        facility.Cuisines = Cuisines.Where(c => selectedCuisines.Contains(c.Id)).ToList();
        facility.Type = null;
        await GastroFacilityService.UpdateAsync(facility);
        Navigation.NavigateTo("/gastro_facility");
    }

    private async Task OnImageChange(InputFileChangeEventArgs e)
    {
        var file = e.File;
        var buffer = new byte[file.Size];
        await file.OpenReadStream().ReadAsync(buffer);
        facility.Photo = buffer;

        var base64 = Convert.ToBase64String(buffer);
        imagePreviewUrl = $"data:image/png;base64,{base64}";
    }

    private void OnCuisineSelectionChanged(ChangeEventArgs e)
    {
        var selectedOptions = ((IEnumerable<string>)e.Value).Select(int.Parse).ToList();
        selectedCuisines = selectedOptions;
    }
}
