// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using culinary_tour_blazor.Server.Core;

#nullable disable

namespace culinary_tour_blazor.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240602151511_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CuisineGastroFacility", b =>
                {
                    b.Property<int>("CuisinesId")
                        .HasColumnType("int");

                    b.Property<Guid>("GastroFacilitiesId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("CuisinesId", "GastroFacilitiesId");

                    b.HasIndex("GastroFacilitiesId");

                    b.ToTable("CuisineGastroFacility");
                });

            modelBuilder.Entity("culinary_tour_blazor.Server.Core.Entities.Cuisine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cuisines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Італійська"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Французька"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Іспанська"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Японська"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Китайська"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Індійська"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Тайська"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Мексиканська"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Грецька"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Турецька"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Українська"
                        });
                });

            modelBuilder.Entity("culinary_tour_blazor.Server.Core.Entities.FacilityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FacilityTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Кафе"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Забігайлівка"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ресторан"
                        });
                });

            modelBuilder.Entity("culinary_tour_blazor.Server.Core.Entities.GastroFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<decimal?>("RatingAvg")
                        .HasColumnType("decimal(2, 1)");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("TypeId");

                    b.ToTable("GastroFacilities");
                });

            modelBuilder.Entity("CuisineGastroFacility", b =>
                {
                    b.HasOne("culinary_tour_blazor.Server.Core.Entities.Cuisine", null)
                        .WithMany()
                        .HasForeignKey("CuisinesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("culinary_tour_blazor.Server.Core.Entities.GastroFacility", null)
                        .WithMany()
                        .HasForeignKey("GastroFacilitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("culinary_tour_blazor.Server.Core.Entities.GastroFacility", b =>
                {
                    b.HasOne("culinary_tour_blazor.Server.Core.Entities.FacilityType", "Type")
                        .WithMany("GastroFacilities")
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Type");
                });

            modelBuilder.Entity("culinary_tour_blazor.Server.Core.Entities.FacilityType", b =>
                {
                    b.Navigation("GastroFacilities");
                });
#pragma warning restore 612, 618
        }
    }
}
